class Vector:
    def __init__(self, values):
        self.values = values

    def __str__(self):
        return str(self.values)

    def __add__(self, other):
        if len(self.values) != len(other.values):
            raise ValueError("Vectors must have the same length")

        result = []
        for i in range(len(self.values)):
            result.append(self.values[i] + other.values[i])

        return Vector(result)

    def __sub__(self, other):
        if len(self.values) != len(other.values):
            raise ValueError("Vectors must have the same length")

        result = []
        for i in range(len(self.values)):
            result.append(self.values[i] - other.values[i])

        return Vector(result)

    def __mul__(self, other):
        if isinstance(other, Vector):
            if len(self.values) != len(other.values):
                raise ValueError("Vectors must have the same length")

            result = 0
            for i in range(len(self.values)):
                result += self.values[i] * other.values[i]

            return result
        else:
            result = []
            for i in range(len(self.values)):
                result.append(self.values[i] * other)

            return Vector(result)

    def __rmul__(self, other):
        result = []
        for i in range(len(self.values)):
            result.append(self.values[i] * other)

        return Vector(result)

v1 = Vector([1, 2, 3])
v2 = Vector([4, 5, 6])

print(v1 + v2)      # [5, 7, 9]
print(v1 - v2)      # [-3, -3, -3]
print(v1 * v2)      # 32
print(2 * v1)       # [2, 4, 6]
print(v1 * 2)       # [2, 4, 6]
