class Romanian:
    def __init__(self, value):
        self.value = value

    def to_roman(self):
        roman_numeral_map = (('M', 1000), ('CM', 900), ('D', 500), ('CD', 400), ('C', 100), ('XC', 90), ('L', 50),
                             ('XL', 40), ('X', 10), ('IX', 9), ('V', 5), ('IV', 4), ('I', 1))
        num = self.value
        result = ''
        while num > 0:
            for roman, integer in roman_numeral_map:
                if num >= integer:
                    result += roman
                    num -= integer
                    break
        return result

    def to_arabic(self):
        roman_numeral_map = (('M', 1000), ('CM', 900), ('D', 500), ('CD', 400), ('C', 100), ('XC', 90), ('L', 50),
                             ('XL', 40), ('X', 10), ('IX', 9), ('V', 5), ('IV', 4), ('I', 1))
        roman_numeral = self.value
        i = result = 0
        while i < len(roman_numeral):
            for roman, integer in roman_numeral_map:
                if roman_numeral[i:i+len(roman)] == roman:
                    result += integer
                    i += len(roman)
                    break
        return result

    def __add__(self, other):
        return Romanian(self.to_arabic() + other.to_arabic()).to_roman()

    def __sub__(self, other):
        return Romanian(self.to_arabic() - other.to_arabic()).to_roman()

    def __mul__(self, other):
        return Romanian(self.to_arabic() * other.to_arabic()).to_roman()

    def __str__(self):
        return self.to_roman()
